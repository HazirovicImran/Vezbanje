In React.js, a component is a piece of code that represents a part of a user interface.
It can be a class component or a functional component.
Class component is a JS class that extends React.Component class, while a functional component is a JS
function that returns only the React element.

A PureComponent is a special type of component that is similar to a component,
but with additional features or optimizations. When a component is a PureComponent,
React will do a shallow comparsion of the props an state before re-rendering the component.
That means that if props and state have not changed, the component will not be re-rendering. 
This can lead to a performance boost in some cases, but if it`s not used properly, it can lead to unexpected behaviour.

Bottomline, a component is the most basic and most used for building a block in React
and PureComponent is used when it needs some special optimizations.

Props(properties) is a way for manipulating data and states. 
We can send data through props and we can send data to parent through props. 

Parent component is component which is created.
Child component is component which is included in Parent component.
Parent component can have more than one Child components.
Child components can also found in other components as children(prop).
Children as a props is a reserved name.
